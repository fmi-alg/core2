# ###########################################################################
#  Since CoreLib 2.2 (June 2013)
#  Chee Yap
# ###########################################################################
#
This file describes two File Formats for 2D and 3D polyhedral objects.

	2D files describe a collection of polygons (not necessarily disjoint)
	3D input files describe a collection of polyhedra (not necessarily
		disjoint)
	The 3D format is basically a compatible extension of the 2D format

##################################################
# 2D Format
##################################################
Our basic 2d polygonal format is this:
This is a sample file format for input
	It supports:
    	(1) rest-of-line comment character is '#'
	(2) initial space, tabs and newlines are ignored.
	(3) continuation line character is '\'
It a sequence of lines with these elements:

(1) Number of points:
	N
	
(2) Coordinates of the N points in a one or more lines :
	
	x1 y1 x2 y2 ...    xN yN
	
	The coordinates xi, yi can be integers or decimal values 
	The point (xi,yi) has index i (for i=1,2,...,N)
	TODO: should allow optional commas, to help visualize the separate points:
	
		x1 y1, x2 y2, x3 y3, ...
	
(3) Number of polygons:
	M
	
(4) Follows M lines, one for each polygon:
	
	p11 p12 p13 ...
	p21 p22 p23 p24 ...
	...
	pM1 pM2 ...
	
	where
	each polygon is given by a sequence of point indices (1 to N)
		E.g., 1 9 12 3 5 1
	The polygons are closed, so the last index must the same
	as the first index. 
	The interior of polygon is left of the directed edges:
		So the interior is finite iff the indices are listed
		in counter-clockwise order
	E.g. 
		2 3 8 2
	and
		2 8 3 2
	are two triangles but one has finite interior, the
	other has finite exterior.
	
	Degenerate polygons (line segment, or polygonal lines) are OK:
	E.g.,
	5 2 5
	5 2 7 9 11 9 7 2 5
	
	If your polygon is non-simple, the effects are
	somewhat unpredictable (it is predictable, of course, but
	harder to figure out).
	
	EXAMPLE:  Suppose we want to represent an obstacle set whose
	complement is a triangular annulus:
                           /\
                          /  \
                         / /\ \
                        / /  \ \
                       / / A  \B\  C
                      / -------- \ 
                     --------------    
	where A and C are interior to the obstacle set,
	but B is exterior to the set. 
	Thus the outer triangle must be listed clockwise,
	and the inner triangle must be listed counter-clockwise.
	
	6		# 6 points
	100 100 	# first point
	300 100 	# second point
	200 300		# third point
	80 80
	320 80
	200 320		# last point
	
	2		# 2 polygons
	1 3 2 1		# first polygon (the inner triangle, listed CCW:
			# 	(100,100), (200,300), (300,100), (100,100)
	4 5 6 4		# second polygon (the outer triangle, listed clockwise)
#
# ###########################################################################
#	RESTRICTION: 	For a point (x,y) we require
#			0 < xi < 512,	0 < yi < 512
# ###########################################################################


# #################################################
# 3D Format
# #################################################

	We have the basic treatment of white space, comment character `#'
	and continuation line `\'.
	But we introduce more human readable conventions.
	
	The file has two sections:
	Section 1:  It begins with a line containing just the
		key word "Points:", followed by a list of
		any number of points in (x,y,z) triples.  Adjacent triples are
		separated by commas, and the list ends with a full-stop.
		The rest of the line following the full-stop is discarded.
	
		#######################################
		Points:
		x1 y1 z1, x2 y2 z2, ... , xN yN, zN .
		#######################################
		
		The implicit name of the i-th point (xi,yi,zi) is "Pi".
		But you can also give your own name to any of these points,
		where a name must begin with a letter followed by any number
		of letters and digits.   To give the name "A2" to the point
		(x2,y2,z2), your precede the coordinates of the points with the
		sequence "A2:",
		Thus: 
	
		x1 y1 z1, A2: x2 y2 z2, ... , xN yN, zN .
	
		Of course, you should not choose names like "Pi" that conflicts
		with the implicit names.
		
	Section 2:  It consists of any number of polyhedron, where each
		polyhedron is comprised of a set of faces.
		For now, we support only triangular faces, which
		is given by naming three points.  E.g., (P2, P17, A2)
		
		Section 2 begins with a line with just the key word "Polyhedra:".
		For each polyhedron, you are required to give it a name,
		followed by a semicolon.  After the semicolon, 
		we list all the faces.  Each face is a triple of point names,
		enclosed in its own pair of parentheses.  Spaces separate
		the faces.  The list of faces is ended by a full-stop.
		The rest of the line following the full-stop is discarded.
		
		The ordering of these 3 points determines which side of the face
		is interior/exterior of the polyhedron.
		
		RIGHT-HAND RULE:
		If a face is given by the triple (u, v, w), and a right-hand
		wraps around in the order from u to v to w, then the
		right-thumb is pointing to the exterior of the polyhedron.
	
		Each face (u,v,w) gives rise to 3 directed edges
				(u,v), (v,w) and (w,u).
		The boundary of the polyhedron to be a manifold:
		This means that each direct edge (u,v) must not be duplicated,
		and there should be its complementary edge (v,u) from another
				face (v,u,w')
		(for some w').
		
		#######################################
		Polyhedra:
		Pol1:
		(P1 P2 P3)  (P4 P3 P2) (P4 P1 P2) (P1 P3 P4) .
		Pol2:
		(P10 P12 P5)  (P12 P10 P3) ...
		#######################################
	
		Note: can extend to quadrilateral faces.	
